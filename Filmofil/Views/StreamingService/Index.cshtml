@using Domen
@model List<StreamingService>

@{
    ViewData["Title"] = "Streaming services";
}

<script src="~/lib/jquery/dist/jquery.js"></script>

<style>
    .card:hover{
        box-shadow : -1px 9px 40px -12px #808080;
    }
    .card-content{
        display:contents;
    }
</style>

<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
</script>

<h1>Streaming services</h1>


<div style="display:flex; justify-content: space-between;">
    <vc:search-bar search-pager="@ViewBag.SearchPager">
    </vc:search-bar>
    @if (ViewData["UserRole"] != null && ViewData["UserRole"].ToString() == "Admin")
    {
<button class="btn btn-primary" type="button" onclick="location.href='@Url.Action("Create","StreamingService")'">Add Streaming Service</button>
    }
</div>



<div class="row">

    
    @if (Model.Count == 0)
    {
        <h3>No streaming service</h3>
    }

    <div class="card-content">
        @foreach (var item in Model)
        {
            <div class="card" style="width:30%;margin:10px;">
                <img src="~/img/streamingServiceLogo/@item.LogoImg" class="card-img-top" />
                <div class="card-body">
                    <div class="card-title">
                        <h2>@item.Name</h2>
                    </div>
                    <a href="/StreamingService/Details/@item.StreamingServiceId" class="btn btn-primary">Read More...</a>
                </div>
            </div>
        }
    </div>
    <div class="pagination">

    </div>
</div>



<script type="text/javascript">
    $('.card').hover(
        function () {
            $(this).animate({
                marginTop: "-=1%",
                marginBottom : "+=1%"
            },200)
        },
        function () {
            $(this).animate({
                marginTop: "+=1%",
                marginBottom : "-=1%"
            })
        }
    )
</script>

<script type="text/javascript">
    function getPageList(totalPages, page, maxLength) {
        function range(start, end) {
            return Array.from(Array(end - start + 1), (_, i) => i + start);
        }

        var sideWidth = maxLength < 9 ? 1 : 2;
        var leftWidth = (maxLength - sideWidth * 2 - 3) >> 1;
        var rightWidth = (maxLength - sideWidth * 2 - 3) >> 1;

        if (totalPages <= maxLength) {
            return range(1, totalPages);
        }

        if (page <= maxLength - sideWidth - 1 - rightWidth) {
            return range(1, maxLength - sideWidth - 1).concat(0, range(totalPages - sideWidth + 1, totalPages));
        }

        if (page >= totalPages - sideWidth - 1 - rightWidth) {
            return range(1, sideWidth).concat(0, range(totalPages - sideWidth - 1 - rightWidth - leftWidth, totalPages));
        }

        return range(1, sideWidth).concat(0, range(page - leftWidth, page + rightWidth), 0, range(totalPages - sideWidth + 1, totalPages));
    }

    $(function () {
        var numberOfItems = $(".card-content .card").length;
        var limitPerPage = 12; //How many card items visible per a page
        var totalPages = Math.ceil(numberOfItems / limitPerPage);
        var paginationSize = 7; //How many page elements visible in the pagination
        var currentPage;

        function showPage(whichPage) {
            if (whichPage < 1 || whichPage > totalPages) return false;

            currentPage = whichPage;

            $(".card-content .card").hide().slice((currentPage - 1) * limitPerPage, currentPage * limitPerPage).show();

            $(".pagination li").slice(1, -1).remove();

            getPageList(totalPages, currentPage, paginationSize).forEach(item => {
                $("<li>").addClass("page-item").addClass(item ? "current-page" : "dots")
                    .toggleClass("active", item === currentPage).append($("<a>").addClass("page-link")
                        .attr({ href: "javascript:void(0)" }).text(item || "...")).insertBefore(".next-page");
            });

            $(".previous-page").toggleClass("disable", currentPage === 1);
            $(".next-page").toggleClass("disable", currentPage === totalPages);
            return true;
        }

        $(".pagination").append(
            $("<li>").addClass("page-item").addClass("previous-page").append($("<a>").addClass("page-link").attr({ href: "javascript:void(0)" }).text("Prev")),
            $("<li>").addClass("page-item").addClass("next-page").append($("<a>").addClass("page-link").attr({ href: "javascript:void(0)" }).text("Next"))
        );

        $(".card-content").show();
        showPage(1);

        $(document).on("click", ".pagination li.current-page:not(.active)", function () {
            return showPage(+$(this).text());
        });

        $(".next-page").on("click", function () {
            return showPage(currentPage + 1);
        });

        $(".previous-page").on("click", function () {
            return showPage(currentPage - 1);
        });
    });
</script>