@model Filmofil.Models.Movie.MovieIndexViewModel

@{
    ViewData["Title"] = "Movies";
}
<link rel="stylesheet" runat="server" media="screen" href="~/css/movies.css" />
<link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.7/css/all.css">
<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
</script>

<div>
    <h1 class="heading" style="margin-left: 0px;">Movies</h1>

</div>

<div style="display:flex; justify-content: space-between;">
    <div class="col-4 p-0 justify-content-end" >
        <form asp-action="Index" style="display: -webkit-box;">
            <div style="display: inline-flex;">
                <span class="btn-group">
                    <input style="width: 350px;" class="form-control" type="search" name="SearchText" value="@Model.SearchText" placeholder="Search key">
                </span>

            </div>
            <div class="form-group">
                <select asp-for="GenreId" class="form-control" name="selectGenre" id="GenreId" style="max-width: 200px;">
                    <option value="noFilter"> Select Genre </option>
                    @foreach (var item in Model.Genres)
                    {
                        if (@ViewData["SelectedGenre"] != null && @ViewData["SelectedGenre"].Equals(@item.Name))
                        {
                            <option value="@item.Name" id="@item.GenreId" selected="selected">@item.Name</option>
                        }
                        else
                        {
                            <option value="@item.Name" id="@item.GenreId">@item.Name</option>
                        }
                    }
                </select>
            </div>
            <button class="btn btn-primary" type="submit">Search</button>
        </form>
    </div>
</div>


<div style="display:flex; justify-content: space-between;">

    @if (ViewData["UserRole"] != null && ViewData["UserRole"].ToString() == "Admin")
    {
        <button class="btn btn-primary" type="button" onclick="location.href='@Url.Action("Create","Movies")'">Add New Movie</button>
    }
</div>



<div class="content">
    @{ if (Model.Movies.Count == 0)
        {
            <p>No matching movies found!</p>}
    }
    @foreach (var item in Model.Movies)
    {
        item.Thumbnail = "https://localhost:5001/img/MoviesImages/" + @item.Thumbnail;
        <div class="card">


            <div class="frontWeb" style="background-image: url(@item.Thumbnail);" onclick="location.href='@Url.Action("Details","Movies", new { id = item.MovieId })'">
            </div>

            <div class="back" onclick="location.href='@Url.Action("Details","Movies", new { id = item.MovieId })'">
                <div style="height: 300px;" >
                    <div class="release_date">@item.Name<span> (@item.Year.Year)</span></div>
                    <div style="font-size: 1em;margin-top: 11px;margin-bottom: 10px;"><i class="fas fa-star mr-2"></i>@item.Rating</div>
                    <div class="movie_gens">
                        @{

                            foreach (var it in @item.Genres)
                            {
                                @it.Genre.ToString()
                            }

                        }

                    </div>

                </div>
               
            </div>
            <div class="back">
                @if (ViewData["UserRole"] != null && ViewData["UserRole"].ToString() == "Admin")
                {
                    <div style="height: 100px; justify-content: center; ">
                        <button class="btn btn-danger" type="button" style="position: absolute; bottom: 0px; left: 0px; width: 214px;" onclick="location.href='@Url.Action("Edit","Movies", new { id = item.MovieId })'">Edit</button>
                    </div>
                }
            </div>
        </div>
    }

</div>

